/**
* @file    diag_halo12.h.in
*
* @brief   ??? Data structures for HSI telemetry data.
*
* What is pragma pack doing?
*
* @copyright   Copyright (C) 2023 ExoTerra Corp - All Rights Reserved
*
* Unauthorized copying of this file, via any medium is strictly prohibited
* proprietary and confidential.  Any unauthorized use, duplication, transmission,
* distribution, or disclosure of this software is expressly forbidden.
*
* This Copyright notice may not be removed or modified without prior written
* consent of ExoTerra Corp.  ExoTerra Corp reserves the right to modify this
* software without notice.
*/

#ifndef HSI_DIAG_H
#define	HSI_DIAG_H

#ifdef	__cplusplus
extern "C" {
#endif

#include <stdint.h>



#pragma pack(push, 1)
typedef struct anode_telemetry_t_ {
    uint32_t vout;
    uint16_t iout;
    uint32_t v_x;
    uint32_t v_y;
    uint16_t current_state;
    uint16_t error_code;
    uint16_t x_pwm_output;
    uint16_t y_pwn_output;
    uint16_t mode;
    uint16_t temperature;
    uint16_t raw_input_voltage;
    uint16_t filtered_input_voltage;
} anode_telemetry_t;

typedef struct keeper_telemetry_t_ {
    uint32_t vout;
    uint16_t vin;
    uint16_t iout;
    uint16_t current_state;
    uint16_t error_code;
    uint16_t pwm_output;
    uint16_t temperature;
} keeper_telemetry_t;

typedef struct magnet_telemetry_t_ {
    uint16_t vout;
    uint16_t iout;
    uint16_t current_state;
    uint16_t error_code;
    uint16_t pwm_output;
    uint16_t temperature;
} magnet_telemetry_t;

typedef struct valves_telemetry_1_t_ {
    uint16_t anode_v;
    uint16_t cathode_hf_v;
    uint16_t cathode_lf_v;
    int32_t temperature;
} valves_telemetry_1_t;

typedef struct valves_telemetry_2_t_ {
    uint32_t tank_pressure;
    uint16_t cathode_pressure;
    uint16_t anode_pressure;
    uint16_t regulator_pressure;
} valves_telemetry_2_t;

typedef struct valves_telemetry_3_t_ {
    uint16_t can_msg_cnt;
    uint16_t can_err;
} valves_telemetry_3_t;

typedef struct hk_telemetry_t_ {
    uint16_t mA_28V;
    uint16_t mV_14V;
    uint16_t mA_14V;
    uint16_t mV_7VA;
    uint16_t mA_7VA;
} hk_telemetry_t;

typedef struct sys_mem_telemetry_t_ {
    uint32_t region_stat;
    uint32_t failed_repairs;
    uint32_t repair_stat;
} sys_mem_telemetry_t;

typedef struct client_telemetry_t_ {
    anode_telemetry_t  anode_telem;
    keeper_telemetry_t keeper_telem;
    magnet_telemetry_t   magnet_telem;
    valves_telemetry_1_t valves_telem_1;
    valves_telemetry_2_t valves_telem_2;
    valves_telemetry_3_t valves_telem_3;
    hk_telemetry_t       hk_adc_telem;
    sys_mem_telemetry_t  sys_mem_telem;
} client_telemetry_t;
#pragma pack(pop)



#ifdef	__cplusplus
}
#endif

#endif	/* HSI_DIAG_H */

